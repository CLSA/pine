cenozoApp.defineModule({name:"respondent",dependencies:"page",models:["add","list","view"],create:module=>{angular.extend(module,{identifier:{parent:{subject:"qnaire",column:"qnaire.id"}},name:{singular:"respondent",plural:"respondents",possessive:"respondent's"},columnList:{uid:{column:"participant.uid",title:"Participant"},token:{title:"Token"},language:{column:"language.name",title:"Language",type:"string",isIncluded:function($state,model){return false}},response_count:{title:"Responses",isIncluded:function($state,model){return false}},status:{title:"Status",type:"string"},page_progress:{title:"Progress",isIncluded:function($state,model){return false}},start_datetime:{column:"respondent.start_datetime",title:"Start Date",type:"datetime"},end_datetime:{column:"respondent.end_datetime",title:"End Date",type:"datetime"}},defaultOrder:{column:"participant.uid",reverse:false}});module.addInputGroup("",{participant_id:{column:"respondent.participant_id",title:"Participant",type:"lookup-typeahead",typeahead:{table:"participant",select:'CONCAT( participant.first_name, " ", participant.last_name, " (", uid, ")" )',where:["participant.first_name","participant.last_name","uid"]},isConstant:"view",help:"For anonymous respondents this value should be left blank."},token:{title:"Token (Interview ID)",type:"string",isExcluded:"add"},status:{title:"Status",type:"string",isConstant:true,isExcluded:"add"},start_datetime:{title:"Start Date & Time",type:"datetime",isConstant:true,isExcluded:"add"},end_datetime:{title:"End Date & Time",type:"datetime",isConstant:true,isExcluded:"add"},sends_mail:{type:"boolean",isExcluded:true},repeated:{column:"qnaire.repeated",type:"string",isExcluded:true},stages:{column:"qnaire.stages",type:"boolean",isExcluded:true},current_response_id:{column:"response.id",type:"string",isExcluded:true},has_devices:{type:"hidden"}});module.addInputGroup("Response",{qnaire_version:{column:"response.qnaire_version",title:"Questionnaire Version",type:"string",isConstant:true,isExcluded:function($state,model){return"view"!=model.getActionFromState()||null!=model.viewModel.record.repeated||null==model.viewModel.record.current_response_id}},language_id:{column:"response.language_id",title:"Language",type:"enum",isExcluded:function($state,model){return"view"!=model.getActionFromState()||null!=model.viewModel.record.repeated||null==model.viewModel.record.current_response_id}},page_progress:{title:"Page Progress",type:"string",isConstant:true,isExcluded:function($state,model){return"view"!=model.getActionFromState()||null!=model.viewModel.record.repeated||null==model.viewModel.record.current_response_id}},checked_in:{column:"response.checked_in",title:"Checked In",type:"boolean",isConstant:true,isExcluded:function($state,model){return"view"!=model.getActionFromState()||null!=model.viewModel.record.repeated||null==model.viewModel.record.current_response_id||false==model.viewModel.record.stages}},module:{column:"module.name",title:"Module",type:"string",isConstant:true,isExcluded:function($state,model){return"view"!=model.getActionFromState()||null!=model.viewModel.record.repeated||null==model.viewModel.record.current_response_id}},page:{column:"page.name",title:"Page",type:"string",isConstant:true,isExcluded:function($state,model){return"view"!=model.getActionFromState()||null!=model.viewModel.record.repeated||null==model.viewModel.record.current_response_id}},comments:{column:"response.comments",title:"Comments",type:"text",isExcluded:function($state,model){return"view"!=model.getActionFromState()||null!=model.viewModel.record.repeated||null==model.viewModel.record.current_response_id}}},true);module.addExtraOperation("list",{title:"Get Respondents",operation:function($state,model){model.getRespondents()},isIncluded:function($state,model){return model.isDetached()},isDisabled:function($state,model){return model.workInProgress}});module.addExtraOperation("list",{title:"Export Completed",operation:async function($state,model){await model.export()},isIncluded:function($state,model){return model.isDetached()},isDisabled:function($state,model){return model.workInProgress}});module.addExtraOperation("list",{title:"Import",operation:async function($state,model){await $state.go("qnaire.import_responses",{identifier:$state.params.identifier})},isIncluded:function($state,model){return!model.isDetached()}});module.addExtraOperation("list",{title:"Mass Respondent",operation:async function($state,model){await $state.go("qnaire.mass_respondent",{identifier:$state.params.identifier})},isIncluded:function($state,model){return!model.isDetached()}});module.addExtraOperation("view",{title:"Export",operation:async function($state,model){await model.export(model.getIdentifierFromRecord(model.viewModel.record))},isIncluded:function($state,model){return model.isDetached()&&null!=model.viewModel.record.end_datetime&&"Exported"!=model.viewModel.record.status},isDisabled:function($state,model){return model.workInProgress}});module.addExtraOperation("view",{title:"Re-Export",operation:async function($state,model){await model.export(model.getIdentifierFromRecord(model.viewModel.record))},isIncluded:function($state,model){return model.isDetached()&&model.isRole("administrator")&&"Exported"==model.viewModel.record.status},isDisabled:function($state,model){return model.workInProgress}});module.addExtraOperation("view",{title:"Display",operation:async function($state,model){await $state.go("response.display",{identifier:model.viewModel.record.current_response_id})},isIncluded:function($state,model){return null==model.viewModel.record.repeated}});module.addExtraOperation("view",{title:"Reopen",operation:async function($state,model){await model.viewModel.reopen()},isIncluded:function($state,model){return!model.viewModel.record.stages&&null!=model.viewModel.record.end_datetime}});module.addExtraOperation("view",{title:"Launch",operation:async function($state,model){await $state.go("respondent.run",{token:model.viewModel.record.token,show_hidden:1})},isIncluded:function($state,model){return model.viewModel.record.stages||null==model.viewModel.record.end_datetime}});module.addExtraOperation("view",{title:"Re-schedule Email",operation:async function($state,model){try{model.viewModel.resendMail()}finally{if(angular.isDefined(model.viewModel.respondentMailModel))await model.viewModel.respondentMailModel.listModel.onList(true)}},isIncluded:function($state,model){return model.viewModel.record.sends_mail},help:"This will re-schedule all mail for this respondent. "+"This is useful if mail was never sent or if email settings have changed since email was last scheduled."});cenozo.providers.directive("cnRespondentRun",["CnRespondentModelFactory",function(CnRespondentModelFactory){return{templateUrl:module.getFileUrl("run.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnRespondentModelFactory.root}}}]);cenozo.providers.factory("CnRespondentAddFactory",["CnBaseAddFactory",function(CnBaseAddFactory){var object=function(parentModel){CnBaseAddFactory.construct(this,parentModel);this.transitionOnSave=function(record){parentModel.transitionToViewState(record)}};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnRespondentViewFactory",["CnBaseViewFactory","CnHttpFactory",function(CnBaseViewFactory,CnHttpFactory){var object=function(parentModel,root){CnBaseViewFactory.construct(this,parentModel,root);angular.extend(this,{onView:async function(force){this.defaultTab=null;await this.$$onView(force);this.defaultTab=this.record.repeated?"response":this.record.stages?"response_stage":this.record.sends_mail?"respondent_mail":"response_attribute";if(!this.tab)this.tab=this.defaultTab},getChildList:function(){return this.$$getChildList().filter(child=>"response"==child.subject.snake&&null!=this.record.repeated||"respondent_mail"==child.subject.snake&&this.record.sends_mail||"response_stage"==child.subject.snake&&this.record.stages&&null==this.record.repeated||"response_attribute"==child.subject.snake&&null==this.record.repeated||"answer_device"==child.subject.snake&&this.record.has_devices&&null==this.record.repeated)},reopen:async function(){await CnHttpFactory.instance({path:this.parentModel.getServiceResourcePath()+"?action=reopen"}).patch();this.parentModel.reloadState(true)},resendMail:async function(){await CnHttpFactory.instance({path:this.parentModel.getServiceResourcePath()+"?action=resend_mail"}).patch()}})};return{instance:function(parentModel,root){return new object(parentModel,root)}}}]);cenozo.providers.factory("CnRespondentModelFactory",["CnBaseModelFactory","CnRespondentAddFactory","CnRespondentListFactory","CnRespondentViewFactory","CnModalMessageFactory","CnSession","CnHttpFactory","$state",function(CnBaseModelFactory,CnRespondentAddFactory,CnRespondentListFactory,CnRespondentViewFactory,CnModalMessageFactory,CnSession,CnHttpFactory,$state){var object=function(root){CnBaseModelFactory.construct(this,module);this.addModel=CnRespondentAddFactory.instance(this);this.listModel=CnRespondentListFactory.instance(this);this.viewModel=CnRespondentViewFactory.instance(this,root);angular.extend(this,{workInProgress:false,isDetached:function(){return CnSession.setting.detached},getMetadata:async function(){await this.$$getMetadata();var response=await CnHttpFactory.instance({path:"language",data:{select:{column:["id","name"]},modifier:{where:{column:"active",operator:"=",value:true},order:"name",limit:1e3}}}).query();this.metadata.columnList.language_id={enumList:response.data.reduce((list,item)=>{list.push({value:item.id,name:item.name});return list},[])}},getRespondents:async function(){var modal=CnModalMessageFactory.instance({title:"Communicating with Remote Server",message:"Please wait while the respondent list is retrieved.",block:true});modal.show();try{this.workInProgress=true;await CnHttpFactory.instance({path:"qnaire/"+$state.params.identifier+"/respondent?action=get_respondents"}).post();await this.listModel.onList(true)}finally{modal.close();this.workInProgress=false}},export:async function(respondentId){var modal=CnModalMessageFactory.instance({title:"Communicating with Remote Server",message:"Please wait while the questionnaire data is exported.",block:true});modal.show();try{this.workInProgress=true;var http=CnHttpFactory.instance({path:angular.isDefined(respondentId)?"respondent/"+respondentId+"?action=export":"qnaire/"+$state.params.identifier+"/respondent?action=export"});var response=angular.isDefined(respondentId)?await http.patch():await http.post();CnModalMessageFactory.instance({title:"Export Complete",message:angular.isDefined(respondentId)?"The respondent has been exported.":0<response.data.length?"The following respondents have been exported:\n\n"+response.data.join(", "):"No respondents have been exported."}).show();if(angular.isDefined(respondentId)){await this.viewModel.onView(true)}else{await this.listModel.onList(true)}}finally{modal.close();this.workInProgress=false}}})};return{root:new object(true),instance:function(){return new object(false)}}}])}});
